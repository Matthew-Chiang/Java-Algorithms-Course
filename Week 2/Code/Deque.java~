public class Deque<Item> implements Iterable<Item> {
  //instance variables
  private Node first;
  private int size = 0;
  
  private class Node
  {
    Item item;
    Node next;
    Node prev;
  }
  public Deque()                           // construct an empty deque
  {
     first = null;
  }
  public boolean isEmpty()                 // is the deque empty?
  {
    return first = null;
  }
  public int size()                        // return the number of items on the deque
  {
    return size;
  }
  public void addFirst(Item item)          // add the item to the front
  public void addLast(Item item)           // add the item to the end
  public Item removeFirst()                // remove and return the item from the front
  public Item removeLast()                 // remove and return the item from the end
    
  public Iterator<Item> iterator()         // return an iterator over items in order from front to end
  public static void main(String[] args)   // unit testing (optional)
}