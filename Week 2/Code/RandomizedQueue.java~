import edu.princeton.cs.algs4.StdRandom;

public class RandomizedQueue<Item> implements Iterable<Item> {
  
  private Item[] struc;
  private int j,k;
  
   public RandomizedQueue()                 // construct an empty randomized queue
   {
     struc = new Item[1];
     StdRandom.setSeed(20);
   }
   public boolean isEmpty()                 // is the queue empty?
   {
     return(struc.length==1 && struc[0]==null);
   }
   public int size()                        // return the number of items on the queue
   {
     return struc.length;
   }
   public void enqueue(Item item)           // add the item
   {
     int insert = StdRandom.uniform(j,k+1);
     
   }
   public Item dequeue()                    // remove and return a random item
   public Item sample()                     // return (but do not remove) a random item
   public Iterator<Item> iterator()         // return an independent iterator over items in random order
     public static void main(String[] args) {}  // unit testing (optional)
}